<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.gov.planejamento.siconv.mandatarias</groupId>
	<artifactId>vrpl-backend</artifactId>
	<version>1.3.8</version>
	<packaging>war</packaging>

	<properties>
		<version.archunit>0.14.1</version.archunit>
		<version.auth0>3.10.3</version.auth0>
		<version.amazons3>1.11.858</version.amazons3>
		<version.dependency-check-maven>3.3.4</version.dependency-check-maven>
		<version.embedded-postgres>1.2.8</version.embedded-postgres>
		<version.hikari>3.4.5</version.hikari>
		<version.hibernate-validator>6.0.16.Final</version.hibernate-validator>
		<version.guava>29.0-jre</version.guava>
		<version.jackson>2.11.2</version.jackson>
		<version.jacoco-maven-plugin>0.8.3</version.jacoco-maven-plugin>
		<version.jacoco-listener>5.14.0.18788</version.jacoco-listener>
		<version.java>11</version.java>
		<version.java-object-diff>0.95</version.java-object-diff>
		<version.jdbi>3.14.4</version.jdbi>
		<version.junit-launcher>1.7.0-M1</version.junit-launcher>
		<version.junit>5.7.0-M1</version.junit>
		<version.liquibase>4.0.0</version.liquibase>
		<version.lombok>1.18.12</version.lombok>
		<version.maven-compiler-plugin>3.8.1</version.maven-compiler-plugin>
		<version.maven-failsafe-plugin>2.22.2</version.maven-failsafe-plugin>
		<version.maven-surefire-plugin>2.22.2</version.maven-surefire-plugin>
		<version.mockito-core>3.5.10</version.mockito-core>
		<version.mockito-junit-jupiter>3.5.10</version.mockito-junit-jupiter>
		<version.postgresql>42.2.14</version.postgresql>
		<version.rest-assured>4.3.1</version.rest-assured>
		<version.sentry>1.7.30</version.sentry>
		<version.siconv-licitacoes-client>1.0.17</version.siconv-licitacoes-client>
		<version.slf4j>2.0.0-alpha1</version.slf4j>
		<version.swagger>1.6.2</version.swagger>
		<version.thorntail>2.7.0.Final</version.thorntail>
		<version.weld>3.0.5.Final</version.weld>
		<version.weld-junit>2.0.1.Final</version.weld-junit>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<maven.compiler.source>${version.java}</maven.compiler.source>
		<maven.compiler.target>${version.java}</maven.compiler.target>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<timestamp>${maven.build.timestamp}</timestamp>
		<jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>
		<skipTests>false</skipTests>
		<skipITDAO>${skipTests}</skipITDAO>
		<skipITBC>${skipTests}</skipITBC>
		<skipUTs>${skipTests}</skipUTs>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.thorntail</groupId>
				<artifactId>bom</artifactId>
				<version>${version.thorntail}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jdbi</groupId>
				<artifactId>jdbi3-bom</artifactId>
				<type>pom</type>
				<version>${version.jdbi}</version>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
		    <groupId>io.jaegertracing</groupId>
		    <artifactId>jaeger-client</artifactId>
		    <version>1.6.0</version>
		</dependency>

		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry</artifactId>
			<version>${version.sentry}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>bean-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>cdi</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>datasources</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>microprofile-health</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.thorntail/microprofile-fault-tolerance -->
		<dependency>
		    <groupId>io.thorntail</groupId>
		    <artifactId>microprofile-fault-tolerance</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>mail</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>microprofile-metrics</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>logging</artifactId>
		</dependency>

		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>jaxrs-multipart</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>resteasy-jaxrs</artifactId>
					<groupId>org.jboss.resteasy</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${version.hibernate-validator}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator-cdi</artifactId>
			<version>${version.hibernate-validator}</version>
		</dependency>

		<dependency>
			<groupId>br.gov.serpro.siconv</groupId>
			<artifactId>siconv-licitacoes-client</artifactId>
			<version>${version.siconv-licitacoes-client}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- swagger -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>${version.swagger}</version>
		</dependency>

		<!-- Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${version.guava}</version>
		</dependency>

		<!-- jdbi -->
		<dependency>
			<groupId>org.jdbi</groupId>
			<artifactId>jdbi3-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jdbi</groupId>
			<artifactId>jdbi3-sqlobject</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jdbi</groupId>
			<artifactId>jdbi3-stringtemplate4</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jdbi</groupId>
			<artifactId>jdbi3-guava</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${version.postgresql}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${version.liquibase}</version>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${version.hikari}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-cdi</artifactId>
			<version>${version.liquibase}</version>
		</dependency>

		<!-- JWT - auth0 -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${version.auth0}</version>
		</dependency>

		<!-- LOMBOK -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${version.lombok}</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${version.jackson}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${version.jackson}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${version.jackson}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-bom -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${version.amazons3}</version>
		</dependency>

		<!-- DependÃªncias de Testes -->

		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${version.mockito-core}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${version.mockito-junit-jupiter}</version>
			<scope>test</scope>
		</dependency>

		<!-- Rest Assured -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${version.rest-assured}</version>
			<scope>test</scope>
		</dependency>

		<!-- JUnit 5 -->

		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${version.junit-launcher}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.zonky.test/embedded-postgres -->
		<dependency>
			<groupId>io.zonky.test</groupId>
			<artifactId>embedded-postgres</artifactId>
			<version>${version.embedded-postgres}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.sonarsource.java/sonar-jacoco-listeners -->
		<dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>${version.jacoco-listener}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.tngtech.archunit/archunit-junit4 -->
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit4</artifactId>
			<version>${version.archunit}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://dzone.com/articles/weld-junit-easy-testing-of-cdi-beans -->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-junit5</artifactId>
			<version>${version.weld-junit}</version>
			<scope>test</scope>
		</dependency>

		<!-- Siconv gRPC Client -->
 		<dependency>
			<groupId>br.gov.serpro.siconv</groupId>
			<artifactId>siconv-grpc-client</artifactId>
			<version>0.1.62-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>

		<!-- Contratos gRPC Client -->
		<dependency>
			<groupId>br.gov.serpro.siconv</groupId>
			<artifactId>contratos-grpc-client</artifactId>
			<version>1.0.0-b350638-c948a464</version>
			<scope>compile</scope>
		</dependency>
        <!--   -->
		<!-- https://mvnrepository.com/artifact/de.danielbechler/java-object-diff -->
		<dependency>
			<groupId>de.danielbechler</groupId>
			<artifactId>java-object-diff</artifactId>
			<version>${version.java-object-diff}</version>
			<scope>test</scope>
		</dependency>

				<!-- CPS gRPC Client -->
		<dependency>
			<groupId>br.gov.serpro.siconv</groupId>
			<artifactId>cps-grpc-client</artifactId>
			<version>0.0.13</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>vrpl-backend</finalName>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco-maven-plugin}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-check-test</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.06</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
					<!-- <execution> <id>jacoco-check-verify</id> <phase>verify</phase>
						<goals> <goal>check</goal> </goals> <configuration> <dataFile>${jacoco.it.execution.data.file}</dataFile>
						<rules> <rule> <element>BUNDLE</element> <limits> <limit> <counter>LINE</counter>
						<value>COVEREDRATIO</value> <minimum>0.1</minimum> </limit> </limits> </rule>
						</rules> </configuration> </execution> -->
				</executions>
			</plugin>
			<!-- Used for unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.maven-surefire-plugin}</version>

				<configuration>
					<skipTests>${skipUTs}</skipTests>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<argLine>-Dpublickey.jwt=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoIVolQydZAWYFnRwluqCNx8mkJ4g+XJmDWFnYwT6uX8PpUd3GGET9orNWQPDyX8iO32pasAWK2JjLFr2jm0+zjhvgTywGbHv5s/io7XeGtn5RrK9o5pdD4OFccvQKElmyQIROFNscNl2Ov53JN6J8aSGCBFWpFuM21jNV/bxx24zAM6AKJGtjQcRwgMiV/FWEzCBDybQ68LzqCDXaxbdPukUnEb5k/N5S9SQqkG+5FMPKwVvpaOXIyA3qyL5ipyNYX8KFa3ZKsPTyYmDqN3296g5unffd8f+r2r4AdrtazkTXlzoHLOh/v2GORw8N73DvFtqjYKWX3bHP/wDPXSTwQIDAQAB</argLine>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<trimStackTrace>false</trimStackTrace> <!-- https://stackoverflow.com/a/16941432/6644646 -->
					<useFile>false</useFile> <!-- https://stackoverflow.com/a/3301509/6644646 -->
             		<includes>
                		<include>
                			br/gov/planejamento/siconv/mandatarias/**/*.java
                		</include>
                	</includes>
<!--                  	<useUnlimitedThreads>true</useUnlimitedThreads>
                    <threadCount>3</threadCount>
                    <parallel>all</parallel> -->
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
				</configuration>
			</plugin>
			<!-- Used for integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${version.maven-failsafe-plugin}</version>
				<executions>
					<execution>
						<id>integration-tests-dao</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<skipTests>${skipITDAO}</skipTests>
							<includes>
								<include>**/*DAOIT.java</include>
							</includes>
							<jvmArguments>${failsafeArgLine}</jvmArguments>
							<argLine>${failsafeArgLine}</argLine>
						</configuration>
					</execution>
					<!-- Ensures that both integration-test and verify goals of the Failsafe
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests-bc</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<skipTests>${skipITBC}</skipTests>
							<includes>
								<include>**/*BCIT.java</include>
							</includes>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<jvmArguments>${failsafeArgLine}</jvmArguments>
							<argLine>${failsafeArgLine}</argLine>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.thorntail</groupId>
				<artifactId>thorntail-maven-plugin</artifactId>
				<version>${version.thorntail}</version>
				<configuration>
					<properties>
						<java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
					</properties>
				</configuration>
				<executions>
					<execution>
						<id>package</id>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven-compiler-plugin}</version>
				<configuration>
					<release>${version.java}</release>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>11</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

	</build>

    <repositories>
        <repository>
            <id>nexus.aic.serpro</id>
            <name>Nexus AIC Serpro</name>
            <url>https://nexus.aic.serpro.gov.br/repository/public</url>
        </repository>
    </repositories>

</project>
